/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package projecte;

import java.util.Arrays;
import javax.swing.JOptionPane;

/**
 *
 * @author alumne
 */
public class GUI extends javax.swing.JFrame {

    
    private static int filaSel=-1;
    /**
     * Creates new form NewJFrame
     */
    public GUI() {
        initComponents();
        inicialitzaComponents();
    }
    
    private void inicialitzaComponents(){
        //Si no han seleccionat cap fila desactivo els botons de borrar i modificar
        botoBorrar.setEnabled(false);
        botoModificar.setEnabled(false);
        
        //Inicialment el jugador serà home
        opcioHome.setSelected(true);
        
        ProjecteJava.inicialitzarVariables();
        
        GUI.carregaTaula(new String[]{"Fila", "Nom", "Dorsal", "Diners", "Home"}, 
                transformaDades(ProjecteJava.getArray())
//                }
                , taulaJugadors);
    
    }
    
    /**
     * Mètode que transforma l'array de jugadors en una matriu
     * @param dades array que conté les dades a transformar
     * @return una matriu d'objectes que conté les dades que ens interessen dels jugadors
     */
    public static Object[][] transformaDades(Jugador[] dades){
        Object[][] resultat=new Object[dades.length][5];
        //Variable per comptar el número de jugadors en dades que hi ha a l'array de dades
        int omplits=0;
        
        for (int i = 0; i < dades.length; i++) {
            if(dades[i].isOmplit()){
                resultat[omplits][0]=i;
                resultat[omplits][1]=dades[i].getNom();
                resultat[omplits][2]=dades[i].getDorsal();
                resultat[omplits][3]=dades[i].getDinersGuanyats();
                resultat[omplits][4]=dades[i].isHome();
                omplits++;
            }
        }
        //Retornem només els jugadors plens
        return Arrays.copyOf(resultat,omplits);
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu1 = new javax.swing.JMenu();
        botoInsertar = new javax.swing.JButton();
        botoModificar = new javax.swing.JButton();
        botoBorrar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        botoSortir = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        taulaJugadors = new javax.swing.JTable();

        jMenu1.setText("jMenu1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        botoInsertar.setText("Insertar Jugador");
        botoInsertar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botoInsertarActionPerformed(evt);
            }
        });

        botoModificar.setText("Modificar Jugador");
        botoModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botoModificarActionPerformed(evt);
            }
        });

        botoBorrar.setText("Borrar Jugador");
        botoBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botoBorrarActionPerformed(evt);
            }
        });

        jLabel1.setText("Llistat de jugadors:");

        botoSortir.setText("Sortir");

        taulaJugadors.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(taulaJugadors);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(129, 129, 129)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 446, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(133, 133, 133)
                                .addComponent(botoSortir))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(botoModificar)
                                    .addComponent(botoInsertar)
                                    .addComponent(botoBorrar))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 88, Short.MAX_VALUE)
                        .addComponent(botoInsertar)
                        .addGap(60, 60, 60)
                        .addComponent(botoModificar)
                        .addGap(57, 57, 57)
                        .addComponent(botoBorrar)
                        .addGap(112, 112, 112)
                        .addComponent(botoSortir))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botoInsertarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botoInsertarActionPerformed
    
    }//GEN-LAST:event_botoInsertarActionPerformed

     private void botoModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botoModificarActionPerformed
        
        //Primer miro si les dades de les caselles són correctes. Si no ho són mostro
        //un advertiment i acabo l'execució del mètode
        if(!dadesCorrectes()){
            JOptionPane.showMessageDialog(this, "Dades de les caselles incorrectes!!");
            return;
        }
        
        // Obtenim l'índex de l'array a partir del valor de la columna 0 de la taula
        int iArray=(int)taula.getValueAt(filaSel, 0);
        Jugador[] array=ProjecteJava.getArray();
        
        array[iArray].setNom(casellaNom.getText().trim());
        array[iArray].setDorsal(Integer.valueOf(casellaDorsal.getText()));
        array[iArray].setDinersGuanyats(Double.valueOf(casellaGuanys.getText()));
        array[iArray].setHome(opcioHome.isSelected());
        
        GUI.carregaTaula(new String[]{"Fila", "Nom", "Dorsal", "Diners", "Home"}, 
                transformaDades(ProjecteJava.getArray())
                , taulaJugadors);
        JOptionPane.showMessageDialog(this, "Dades modificades!!");
    }//GEN-LAST:event_botoModificarActionPerformed

    private void botoSortirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botoSortirActionPerformed
        // TODO add your handling code here:
        
        ProjecteJava.finalitzar();
        System.exit(1);
    }//GEN-LAST:event_botoSortirActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        ProjecteJava.finalitzar();
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI_exemple.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI_exemple.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI_exemple.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI_exemple.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new GUI_exemple().setVisible(true);
        });
    }

    private void taulaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_taulaMouseClicked
        //Actualitzo la fila seleccionada 
        filaSel=taula.getSelectedRow();
        
        if(filaSel==-1){    
            //Si no han seleccionat cap fila desactivo els botons de borrar i modificar
            botoBorrar.setEnabled(false);
            botoModificar.setEnabled(false);
            
            //Poso les caselles en blanc
            casellaNom.setText("");
            casellaDorsal.setText("");
            casellaGuanys.setText("");
            opcioHome.setSelected(true);
        }        
        else{
            //Si han seleccionat alguna fila activo els botons de borrar i modificar
            botoBorrar.setEnabled(true);
            botoModificar.setEnabled(true);
            
            //Actualizo les caselles en la informació de la fila seleccionada
            casellaNom.setText((String)taula.getValueAt(filaSel, 1));
            casellaDorsal.setText(String.valueOf(taula.getValueAt(filaSel, 2)));
            casellaGuanys.setText(String.valueOf(taula.getValueAt(filaSel, 3)));
            if((boolean)taula.getValueAt(filaSel, 4))
                opcioHome.setSelected(true);
            else opcioDona.setSelected(true);
        }
        
        
    }//GEN-LAST:event_taulaMouseClicked

    
    private boolean dadesCorrectes() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    private static class Jugador {

        public Jugador() {
        }

        private boolean isOmplit() {
            throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }

        private Object getNom() {
            throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }

        private Object getDorsal() {
            throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }

        private Object getDinersGuanyats() {
            throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }

        private Object isHome() {
            throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }

        private void setDorsal(Integer valueOf) {
            throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }

        private void setDinersGuanyats(Double valueOf) {
            throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }

        private void setHome(boolean selected) {
            throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }
    }

    private static class opcioHome {

        private static void setSelected(boolean b) {
            throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }

        private static boolean isSelected() {
            throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }

        public opcioHome() {
        }
    }

    private static class botoModificar {

        private static void setEnabled(boolean b) {
            throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }

        public botoModificar() {
        }
    }

    private static class botoBorrar {

        private static void setEnabled(boolean b) {
            throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }

        public botoBorrar() {
        }
    }

    private static class casellaNom {

        private static void setText(String string) {
            throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }

        private static Object getText() {
            throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }

        public casellaNom() {
        }
    }

    private static class casellaDorsal {

        private static void setText(String string) {
            throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }

        private static String getText() {
            throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }

        public casellaDorsal() {
        }
    }

    private static class casellaGuanys {

        private static void setText(String string) {
            throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }

        private static String getText() {
            throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }

        public casellaGuanys() {
        }
    }

    private static class opcioDona {

        private static void setSelected(boolean b) {
            throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }

        public opcioDona() {
        }
    }

    private static class ProjecteJava {

        private static void inicialitzarVariables() {
            throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }

        private static Jugador[] getArray() {
            throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }

        private static void finalitzar() {
            throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }

        public ProjecteJava() {
        }
    }

    private static class GUI_exemple {

        public GUI_exemple() {
        }

        private void setVisible(boolean b) {
            throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }
    }
    }                                        

    private void botoBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botoBorrarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_botoBorrarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botoBorrar;
    private javax.swing.JButton botoInsertar;
    private javax.swing.JButton botoModificar;
    private javax.swing.JButton botoSortir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable taulaJugadors;
    // End of variables declaration//GEN-END:variables

